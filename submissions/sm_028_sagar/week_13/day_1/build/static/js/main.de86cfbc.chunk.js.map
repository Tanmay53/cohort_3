{"version":3,"sources":["Components/Common/Dashboard.js","Redux/actions.js","Components/Common/AddUser.js","Components/Common/ViewUser.js","Components/Auth/Login.js","Components/Common/UpdateUser.js","Routes/Routes.js","serviceWorker.js","Redux/reducer.js","Redux/store.js","index.js","App.js"],"names":["connect","state","isLoggedIn","dispatch","logOut","type","props","Container","maxWidth","Box","m","Typography","variant","Button","to","onClick","AddUser","handleChange","e","setState","target","name","value","handleSubmit","newUser","id","count","age","email","cibil_score","loan","console","log","dataSubmit","this","autoComplete","TextField","onChange","label","color","fullWidth","required","htmlFor","style","margin","ml","Component","input","data","ViewUser","sortCibil","sortLoan","loanAmt","filterLoanType","loanType","filterLoan","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","viewTableData","map","item","key","getUser","updateUser","Login","handleLogin","credentials","username","password","loginSubmit","helperText","FormHelperText","loginData","UpdateUser","handleUpdate","updatedUser","saveUpdate","UserData","userData","noValidate","updateUserData","Routes","path","render","exact","Boolean","window","location","hostname","match","initialObj","validUsername","validPassword","filteredData","reducer","action","findUser","find","arr","i","length","sortArr","sort","a","b","Number","sortLoanArr","filterArr","filter","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de86cfbc.chunk.js","sourcesContent":["import React from 'react'\nimport { Container,Box,Button, Typography } from '@material-ui/core'\nimport {Redirect,Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {isLogOut} from '../../Redux/actions'\n\nfunction Dashboard(props) {\n    if(props.isLoggedIn){\n        return (\n            <div>\n                <Container maxWidth='sm'>\n                    <Box m={5}>\n                        <Typography m={5} variant='h5'>\n                            Dashboard\n                        </Typography>\n                    </Box>\n                    <Box m={5}>\n                        <Button variant='contained' > <Link to='/addUser'> ADD NEW USER</Link></Button>\n                    </Box>\n                    <Box m={5}>\n                        <Button variant='contained'><Link to='/viewUser'> VIEW NEW USER</Link></Button>\n                    </Box>\n                    <Box m={5}>\n                        <Button variant='contained' onClick={()=>props.logOut()}>LOGOUT</Button>\n                    </Box>\n                </Container>\n            </div>\n        )\n    }else\n        return <Redirect to='/login' />\n}\n\nconst mapStateToProps = state =>{\n   return {\n    isLoggedIn:state.isLoggedIn\n   }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        logOut:() => dispatch(isLogOut())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard)","\nexport const Check_Login = 'Check_Login'\n\nexport const checkLogin = (loginData) =>{\n    console.log('action')\n    return {\n        type:Check_Login,\n        loginData\n    }\n}\n\nexport const Submit_Data = 'Submit_Data'\n\nexport const submitData = (data) =>{\n    return {\n        type:Submit_Data,\n        data\n    }\n}\n\nexport const Update_User = 'Update_User'\n\nexport const updateUser = (id) =>{\n    return {\n        type:Update_User,\n        id\n    }\n}\n\nexport const Save_Update = 'Save_Update'\nexport const saveUpdatedUser = data =>{\n    return {\n        type:Save_Update,\n        data\n    }\n}\n\nexport const Sort_Cibil = 'Sort_Cibil'\nexport const sortCibil = (value) => {\n    return{\n        type:Sort_Cibil,\n        value\n    }\n}\n\nexport const Sort_Loan = 'Sort_Loan'\nexport const sortLoan = (value) =>{\n    return {\n        type:Sort_Loan,\n        value\n    }\n}\n\nexport const Filter_Loan = 'Filter_Loan'\nexport const filterLoanType = (value) =>{\n    return {\n        type:Filter_Loan,\n        value\n    }\n}\n\nexport const Logout = 'Logout'\nexport const isLogOut = () => {\n    return {\n        type:Logout\n    }\n}","import React from 'react'\nimport {Container,Box,Typography,TextField,Button} from '@material-ui/core'\nimport { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {submitData} from '../../Redux/actions'\nimport {Link, Redirect} from 'react-router-dom'\n\nclass AddUser extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name:'',\n            age:'',\n            email:'',\n            cibil_score:'',\n            loan:'',\n            type:'personal',\n            count:0\n        }\n    \n    }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.name] : [e.target.value]\n        })\n    }\n\n    handleSubmit = () =>{\n        let newUser = {\n            id:this.state.count,\n            name:this.state.name,\n            age:this.state.age,\n            email:this.state.email,\n            cibil_score:this.state.cibil_score,\n            loan:this.state.loan,\n            type:this.state.type\n        }\n        console.log('user added')\n        this.props.dataSubmit(newUser)\n        this.state.count++\n    }\n\n    render(){\n       console.log(this.props.isLoggedIn)\n       if(this.props.isLoggedIn === true){\n        return (\n            <div>\n                <Container maxWidth='sm'>\n                        <Box m={2}>\n                            <Typography variant='h5'>Add New User</Typography>\n                        </Box>\n                        <Box m={2}>\n                            <Typography variant='h5'>Fill Details</Typography>\n                        </Box>\n                            <form autoComplete=\"off\">\n                                <Box m={2}>\n                                    <TextField\n                                        name='name'\n                                        value={this.state.name}\n                                        onChange={(e)=>this.handleChange(e)}\n                                        id=\"outlined-secondary\"\n                                        label=\"Name\"\n                                        type='text'\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        required\n                                    />\n                                </Box>\n                                <Box m={2}>\n                                    <TextField\n                                        name='age'\n                                        value = {this.state.age}\n                                        onChange={(e)=>this.handleChange(e)}\n                                        id=\"outlined-secondary\"\n                                        label=\"Age\"\n                                        type='number'\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        required\n                                    />\n                                </Box>\n                                <Box m={2}>\n                                    <TextField\n                                        name='email'\n                                        value = {this.state.email}\n                                        onChange={(e)=>this.handleChange(e)}\n                                        id=\"outlined-secondary\"\n                                        label=\"Email\"\n                                        type='email'\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        required\n\n                                    />\n                                </Box>\n                                <Box m={2}>\n                                    <TextField\n                                        name='cibil_score'\n                                        value = {this.state.cibil_score}\n                                        onChange={(e)=>this.handleChange(e)}\n                                        id=\"outlined-secondary\"\n                                        label='CIBIL Score'\n                                        type='number'\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        required\n\n                                    />\n                                </Box>\n                                <Box m={2}>\n                                    <TextField\n                                        name='loan'\n                                        value = {this.state.loan}\n                                        onChange={(e)=>this.handleChange(e)}\n                                        id=\"outlined-secondary\"\n                                        label=\"Loan Amount\"\n                                        type='number'\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        required\n                                    />\n                                </Box>\n                                <Box m={2}>\n                                   <label htmlFor='type' style={{margin:'15px'}}>Loan Type</label>\n                                   <select name='type' value={this.state.type} onChange={this.handleChange} >\n                                        <option value='personal'>personal</option>\n                                        <option value='business'>business</option>\n                                        <option value='education'>education</option>\n                                        <option value='car'>car</option>\n                                        <option value='home'>home</option>\n                                   </select>\n                                </Box>\n                                <Box m={2}>\n                                   <Button color='primary'  onClick={()=>this.handleSubmit()} >Submit Data</Button>\n                                </Box>\n                            </form>\n                            <Box ml={50}>\n                                   <Button color='primary' ><Link to='/viewUser'>Check Table</Link></Button>\n                            </Box>\n                </Container>\n            </div>\n        )\n       }else    \n            return <Redirect to='/login' />\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn:state.isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dataSubmit: (input) => dispatch(submitData(input))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddUser)\n","import React,{Component} from 'react'\nimport { Container,TableContainer,TableHead,TableRow,TableCell,TableBody,Table } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport {Link, Redirect} from 'react-router-dom'\nimport {updateUser,sortCibil,sortLoan,filterLoanType} from '../../Redux/actions'\n\nclass ViewUser extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            type:'asc',\n            loanAmt:'asc',\n            loanType:'all',\n        }\n    }\n    \n    sortCibil = (e) =>{\n        this.setState({\n            type:e.target.value,\n        })\n        this.props.sortCibil(e.target.value)\n    }\n\n    sortLoan = (e) =>{\n        console.log('sorting')\n        this.setState({\n            loanAmt:e.target.value,\n        })\n        this.props.sortLoan(e.target.value)\n    }\n\n    filterLoanType = (e) => {\n        this.setState({\n            loanType:e.target.value,\n        })\n        this.props.filterLoan(e.target.value)\n        console.log('filtering started')\n    }\n    \n    render(){\n        if(this.props.isLoggedIn){\n            return (\n                <div>\n                    <Container maxWidth='md'>\n                    <TableContainer >\n                        <Table  size=\"small\" aria-label=\"a dense table\">\n                            <TableHead>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell align=\"center\">Age</TableCell>\n                                <TableCell align=\"center\">Email</TableCell>\n                                <TableCell align=\"center\">CIBIL Score\n                                    <br />\n                                    <select value={this.state.type} onChange={this.sortCibil}>\n                                        <option value='asc'>asc</option>\n                                        <option value='desc'>desc</option>\n                                    </select>\n                                </TableCell>\n                                <TableCell align=\"center\">Loan Amount\n                                    <br />\n                                    <select value={this.state.loanAmt} onChange={this.sortLoan}>\n                                        <option value='asc'>asc</option>\n                                        <option value='desc'>desc</option>\n                                    </select>   \n                                </TableCell>\n                                <TableCell align=\"center\">Loan Type\n                                    <br />\n                                    <select value={this.state.loanType} onChange={this.filterLoanType}>\n                                        <option value='personal'>personal</option>\n                                        <option value='business'>business</option>\n                                        <option value='education'>education</option>\n                                        <option value='car'>car</option>\n                                        <option value='home'>home</option>\n                                        <option value='all'>all</option>\n                                    </select> \n                                </TableCell>\n                            </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {this.props.viewTableData.map(item => {\n                                return (\n                                    <TableRow key={item.id}>\n                                        <TableCell align='center'><Link to={`/updateUser/${item.id}`} onClick={()=>this.props.getUser(item.id)} >{item.name}</Link></TableCell>\n                                        <TableCell align='center'>{item.age}</TableCell>\n                                        <TableCell align='center'>{item.email}</TableCell>\n                                        <TableCell align='center'>{item.cibil_score}</TableCell>\n                                        <TableCell align='center'>{item.loan}</TableCell>\n                                        <TableCell align='center'>{item.type}</TableCell>\n                                    </TableRow>\n                                )\n                            })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <Link to='/dashboard'>Dashboard</Link>\n                    </Container>\n                </div>\n            )\n        }else\n            return <Redirect to='/login' />\n    }\n}\n\nconst mapStateToProps = state =>{\n    return {\n        viewTableData:state.viewTableData,\n        isLoggedIn:state.isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        getUser:(id) => dispatch(updateUser(id)),\n        sortCibil: (value) => dispatch(sortCibil(value)),\n        sortLoan:(value) => dispatch(sortLoan(value)),\n        filterLoan:(value) => dispatch(filterLoanType(value))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ViewUser)","import React,{Component} from 'react'\nimport {Box,Container,TextField,Button,Typography,FormHelperText} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport { checkLogin } from '../../Redux/actions'\nimport { Redirect } from 'react-router-dom'\n\nclass Login extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            username:'',\n            password:''\n        }\n    }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    handleLogin = () =>{\n        console.log('clicked')\n        let credentials = {\n            username:this.state.username,\n            password:this.state.password\n        }\n        this.props.loginSubmit(credentials)\n    }\n\n    render(){\n        if(this.props.isLoggedIn){\n            return <Redirect to='/dashboard' />\n        }else{\n            return (\n                <div>\n                    <Container maxWidth='sm'>\n                        <Box m={2}>\n                            <Typography m={2} variant=\"h5\">Login</Typography>\n                        </Box>\n                        <Box m={2}>\n                             <TextField name='username' id=\"standard-secondary\" type='text' value={this.state.username} onChange={(e)=>this.handleChange(e)} label=\"Username\" color=\"primary\" fullWidth/>\n                        </Box>\n                        <Box m={2}>\n                             <TextField name='password' id=\"standard-secondary\" type='password' value={this.state.password} onChange={(e)=>this.handleChange(e)} label=\"Password\" color=\"primary\" fullWidth/>\n                        </Box>\n                        <Box m={2}>\n                            <Button variant='contained' color='primary' onClick={()=>this.handleLogin()}>Sign In</Button>\n                        </Box>\n                        {this.props.helperText && <Box m={2}>\n                                <FormHelperText>{this.props.helperText}</FormHelperText>\n                        </Box>}\n                    </Container>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) =>{\n    return {\n        helperText : state.helperText,\n        isLoggedIn : state.isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        loginSubmit : (input) => dispatch(checkLogin(input))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)","import React,{Component} from 'react'\nimport {Container,Box,Typography,TextField,Button} from '@material-ui/core'\nimport {Link, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { saveUpdatedUser } from '../../Redux/actions'\n\nclass UpdateUser extends Component {\n   constructor(props){\n       super(props)\n       \n        this.UserData = this.props.userData\n        console.log(this.UserData) \n        this.state = {\n            id:this.UserData.id,\n            name:this.UserData.name,\n            age:this.UserData.age,\n            email:this.UserData.email,\n            cibil_score:this.UserData.cibil_score,\n            loan:this.UserData.loan,\n            type:this.UserData.type,\n        }\n   }\n\n   handleChange = (e) =>{\n       this.setState({\n           [e.target.name] : [e.target.value]\n       })\n    }\n\n    handleUpdate = () =>{\n        console.log('updating user')\n        let updatedUser = {\n                id:this.state.id,\n                name:this.state.name,\n                age:this.state.age,\n                email:this.state.email,\n                cibil_score:this.state.cibil_score,\n                loan:this.state.loan,\n                type:this.state.type\n            }\n            console.log('inside handle update ',updatedUser)\n            this.props.saveUpdate(updatedUser)\n        }\n\n   \n   render(){\n        if(this.props.isLoggedIn){\n            return (\n                <div>\n                         <Container maxWidth='sm'>\n                                <Box m={2}>\n                                    <Typography variant='h5'>Update User Details:</Typography>\n                                </Box>\n                \n                                    <form noValidate autoComplete=\"off\">\n                                        <Box m={2}>\n                                            <TextField\n                                                name='name'\n                                                value={this.state.name}\n                                                onChange={(e)=>this.handleChange(e)}\n                                                id=\"outlined-secondary\"\n                                                label=\"Name\"\n                                                type='text'\n                                                color=\"primary\"\n                                                fullWidth\n                                                required\n                                            />\n                                        </Box>\n                                        <Box m={2}>\n                                            <TextField\n                                                name='age'\n                                                value = {this.state.age}\n                                                onChange={(e)=>this.handleChange(e)}\n                                                id=\"outlined-secondary\"\n                                                label=\"Age\"\n                                                type='number'\n                                                color=\"primary\"\n                                                fullWidth\n                                                required\n                                            />\n                                        </Box>\n                                        <Box m={2}>\n                                            <TextField\n                                                name='email'\n                                                value = {this.state.email}\n                                                onChange={(e)=>this.handleChange(e)}\n                                                id=\"outlined-secondary\"\n                                                label=\"Email\"\n                                                type='email'\n                                                color=\"primary\"\n                                                fullWidth\n                                                required\n        \n                                            />\n                                        </Box>\n                                        <Box m={2}>\n                                            <TextField\n                                                name='cibil_score'\n                                                value = {this.state.cibil_score}\n                                                onChange={(e)=>this.handleChange(e)}\n                                                id=\"outlined-secondary\"\n                                                label='CIBIL Score'\n                                                type='number'\n                                                color=\"primary\"\n                                                fullWidth\n                                                required\n        \n                                            />\n                                        </Box>\n                                        <Box m={2}>\n                                            <TextField\n                                                name='loan'\n                                                value = {this.state.loan}\n                                                onChange={(e)=>this.handleChange(e)}\n                                                id=\"outlined-secondary\"\n                                                label=\"Loan Amount\"\n                                                type='number'\n                                                color=\"primary\"\n                                                fullWidth\n                                                required\n                                            />\n                                        </Box>\n                                        <Box m={2}>\n                                           <label htmlFor='type' style={{margin:'15px'}}>Loan Type</label>\n                                           <select name='type'  onChange={this.handleChange} >\n                                               <option value='personal' >Personal</option>\n                                               <option value='educational'>Educational</option>\n                                               <option value='car'>Car</option>\n                                               <option value='home'>Home</option>\n                                               <option value='business'>Business</option>\n                                           </select>\n                                        </Box>\n                                        <Box m={2}>\n                                           <Button color='primary' onClick={()=>this.handleUpdate()} >Update</Button>\n                                        </Box>\n                                    </form>\n                                    <Box ml={50}>\n                                           <Button color='primary' ><Link to='/viewUser'>Check Table</Link></Button>\n                                           <Button color='primary' ><Link to='/dashboard'>Go On Dashboard</Link></Button>\n        \n                                    </Box>\n                        </Container>\n                </div>\n            )\n        }else\n            return <Redirect to='/login' />\n   }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userData:state.updateUserData,\n        isLoggedIn:state.isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        saveUpdate: (input) => dispatch(saveUpdatedUser(input))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(UpdateUser)","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Dashboard from '../Components/Common/Dashboard'\nimport AddUser from '../Components/Common/AddUser'\nimport ViewUser from '../Components/Common/ViewUser'\nimport Login from '../Components/Auth/Login'\nimport UpdateUser from '../Components/Common/UpdateUser'\n\nexport default function Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path='/dashboard' render = {()=><Dashboard />} />\n                <Route exact path='/login' render = {()=><Login />} />\n                <Route exact path='/addUser' render = {()=><AddUser />} />\n                <Route exact path='/viewUser' render = {()=><ViewUser />} />\n                <Route exact path='/updateUser/:id' render = {() => <UpdateUser />} />\n                <Redirect to='/dashboard' />\n            </Switch>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Check_Login, Submit_Data, Update_User, Save_Update, Sort_Cibil,Sort_Loan, Filter_Loan, Logout } from \"./actions\"\n\n\nconst initialObj = {\n    //regarding login form\n    validUsername:'admin',\n    validPassword:'admin',\n    helperText:null,\n    isLoggedIn:false,\n    //User Data\n    data:[],\n    updateUserData:{},\n    filteredData:[],\n    viewTableData:[]\n}\n\n\nconst reducer = (state = initialObj, action) =>{\n    console.log('filter ',state.filteredData,'data ',state.data )\n    switch(action.type){\n        case Check_Login:\n             if(action.loginData.username === state.validUsername && action.loginData.password === state.validPassword){\n                console.log('success')\n                return {\n                     ...state,\n                     isLoggedIn:true,\n                 }\n             }else{\n                 return {\n                     ...state,\n                     helperText:'Please fill valid credentials'\n                 }\n             }\n        case Submit_Data:\n               return {\n                   ...state,\n                   data:[...state.data,action.data],\n                   viewTableData:[...state.data,action.data]\n               }\n        case Update_User:\n               let findUser = state.data.find(item => item.id === action.id)\n               return {\n                   ...state,\n                   updateUserData: findUser\n               }\n        case Save_Update:\n                    //saving updated user\n                    // let arr = state.data.filter(item => item.id !== action.data.id)\n                    let arr = state.data\n                    for(let i = 0; i < arr.length; i++){\n                        if(arr[i].id === action.data.id){\n                            arr[i] = action.data\n                        }\n                    }  \n                    return {\n                        ...state,\n                        data: [...arr],\n                        viewTableData:[...arr]\n                    }     \n        case Sort_Cibil:\n                    let sortArr = state.data\n                    if(action.value === 'asc')\n                        sortArr.sort((a,b) => Number(a.cibil_score) - Number(b.cibil_score))\n                    else if(action.value === 'desc')\n                        sortArr.sort((a,b) => Number(b.cibil_score) - Number(a.cibil_score)) \n                    return {\n                        ...state,\n                        viewTableData:[...sortArr]\n                    }\n        case Sort_Loan:\n                    let sortLoanArr = state.data\n                    if(action.value === 'asc')\n                        sortLoanArr.sort((a,b) => Number(a.loan) - Number(b.loan))\n                    else if(action.value === 'desc')\n                        sortLoanArr.sort((a,b) => Number(b.loan) - Number(a.loan)) \n                    return {\n                        ...state,\n                        viewTableData:[...sortLoanArr]\n                    }    \n        case Filter_Loan:\n                    if(action.value !== 'all'){\n                        let filterArr = state.data.filter(item => {\n                            console.log(item.type[0],action.value)\n                            return item.type[0] === action.value\n                        })\n                        return {\n                            ...state,\n                            viewTableData:[...filterArr]\n                        }\n                    }else{\n                        let data = state.data\n                        return {\n                            ...state,\n                            viewTableData:[...data]\n                        }\n                    }\n        case Logout:\n                    return {\n                        ...state,\n                        isLoggedIn:false\n                    }\n        default:\n                    return state\n    }\n}\n\nexport default reducer","import {createStore} from 'redux'\nimport reducer from './reducer'\n\n\nconst store = createStore(reducer)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './Redux/store'\n\nReactDOM.render(\n    <Provider store={store}>  \n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport {BrowserRouter} from 'react-router-dom'\nimport Routes from './Routes/Routes'\n\nexport default function App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </div>\n  )\n}\n"],"sourceRoot":""}